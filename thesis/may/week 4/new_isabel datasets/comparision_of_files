import vtk
from vtk.util.numpy_support import vtk_to_numpy
import numpy as np

def read_vti(file_path):
    reader = vtk.vtkXMLImageDataReader()
    reader.SetFileName(file_path)
    reader.Update()
    return reader.GetOutput()

def compare_gmm_vti(file1, file2):
    data1 = read_vti(file1)
    data2 = read_vti(file2)

    point_data1 = data1.GetPointData()
    point_data2 = data2.GetPointData()

    num_arrays1 = point_data1.GetNumberOfArrays()
    num_arrays2 = point_data2.GetNumberOfArrays()

    if num_arrays1 != num_arrays2:
        print(f"Different number of point data arrays: {num_arrays1} vs {num_arrays2}")
        return

    print("\n🔍 Statistical Comparison of Arrays:\n")

    for i in range(num_arrays1):
        array1 = point_data1.GetArray(i)
        array2 = point_data2.GetArray(i)

        name1 = array1.GetName()
        name2 = array2.GetName()

        if name1 != name2:
            print(f"⚠️ Mismatched array names: {name1} vs {name2}")
            continue

        np1 = vtk_to_numpy(array1).flatten()
        np2 = vtk_to_numpy(array2).flatten()

        if np1.shape != np2.shape:
            print(f"⚠️ Shape mismatch in array '{name1}': {np1.shape} vs {np2.shape}")
            continue

        # Compute statistics
        mean1, std1 = np1.mean(), np1.std()
        mean2, std2 = np2.mean(), np2.std()
        mae = np.mean(np.abs(np1 - np2))
        correlation = np.corrcoef(np1, np2)[0, 1]

        print(f"📌 Array: {name1}")
        print(f"  Mean:       file1 = {mean1:.6f}, file2 = {mean2:.6f}")
        print(f"  Std Dev:    file1 = {std1:.6f}, file2 = {std2:.6f}")
        print(f"  MAE:        {mae:.6f}")
        print(f"  Correlation: {correlation:.6f}")
        print()

# Example usage
compare_gmm_vti("new_isabel datasets\sklearn_isabel_gmm_multi.vti", "new_isabel datasets\sklearn_isabel_gmm_gpu3.vti")
